q()
find.package("devtools")
install.packages("devtools")
find.package(devtools)
find.package("devtools")
library(devtools)
find_rtools()
install.packages("ggplot2")
library(ggplot2)
help(library)
install.packages("mime")
install.packages("swirl")
packageVersion(swirl)
packageVersion("swirl")
library(swirl)
install_from_swirl("R Programming")
install_from_swirl("R Programming")
install_course_zip(file.choose(), multi=TRUE, which_course="R Programming")
swirl()
bye
bye
exit
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z *2 + 100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1, 2, 3, 5) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
(z * 2 + 100)
(z * 2 + 1000)
z *2 + 1000
my_div
getwd()
ls()
x<-9
ls()
list.files()
?list.files
list.files().args()
args(list.files())
args(list.files)
old.dir<-list.files()
old.dir<-getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
file.list()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
args(file.rename)
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2", "testdir3"))
dir.create(file.path("testdir2", "testdir3"), recursive=TRUE)
setwd(old.dir)
ulink('testdir',recursive=TRUE)
unlinke('testdir', recursive=TRUE)
unlink('testdir', recursive=TRUE)
exit
play()
bye()
quit
add2 <- function(x,y){}
add2 <- function(x,y){
x+y
}
add2(2,3)
load('swirl')
library('swirl')
swirl()
TRUE==TRUE
(FALSE ==TRUE) == FALSE
==7
6==7
6<7
10<=10
5 != 7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins','twins')
xor(5 ==6,!FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5, 10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor=11, num=5)
remainder(4, div=2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]},c(8, 4, 0)
)
?paste
paste("Programming", "is", "fun!")
submit()
submit()
telegram("Hello", "World")
submit()
submit()
mad_libs(place="Purdue", adjective="hot", noun="fountain")
submit
submit()
"I" %p% "love" %p% "R!"
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
s2 <- as.Date("1969-01-01")
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
g2
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t2 <- "October 17, 1986 08:24"
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.tim(), t1, units = 'days')
difftime(Sys.time(), t1, units = 'days')
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <-10
f(3)
wd
wd()
rwd()
library("swirl")
swirl()
cls_list
as.character(cls_list)
?sapply
sapply(cls_list, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head flag_colors
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flag[, 19:23]
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
spply(flags, class)
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags@animate, flags$landmass, mean)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
exit
quit
0
source('C:/Projects/R/ProgrammingAssignment2/cachematrix.R')
source('C:/Projects/R/ProgrammingAssignment2/cachematrix.R')
source('C:/Projects/R/ProgrammingAssignment2/cachematrix.R')
set.seed(1110201)
r <- rnorm(100000)
mat1 <- matrix(r, nrow=1000, ncol=1000)
test(mat1)
?matrix
class mat1
class(mat1)
source('C:/Projects/R/ProgrammingAssignment2/cachematrix.R')
test(mat1)
mat1 <- matrix(rnorm(16),4,4)
test(mat1)
mat1 <- matrix(rnorm(25),5,5)
test(mat1)
source('C:/Projects/R/ProgrammingAssignment2/cachematrix.R')
source('C:/Projects/R/ProgrammingAssignment2/cachematrix.R')
test(mat1)
mat1 <- matrix(rnorm(4),2,2)
test(mat1)
mat1 <- matrix(rnorm(100),10,10)
test(mat1)
mat2 <- matrix(rnorm(100),10,10)
test(mat2)
?rnorm
rnorm(100)
mat2 <- matrix(rnorm(1000),100,100)
test(mat2)
mat2 <- matrix(rnorm(10000),100,100)
test(mat2)
test(mat2)
test(mat2)
test(mat2)
test(mat2)
mat2 <- matrix(1:10000,100,100)
test(mat2)
mat2 <- matrix(rnorm(10000),100,100)
test(mat2)
cacheSolve(mat2)
temp <- makeCacheMatrix(mat2)
cacheSolve(temp)
mat2 <- matrix(rnorm(16),4,4)
temp <- makeCacheMatrix(mat2)
cacheSolve(temp)
mat2
source('C:/Projects/R/ProgrammingAssignment2/cachematrix.R')
getwd()
setwd("C:/Projects/R/Course3/Course3Project/")
getwd()
dir
